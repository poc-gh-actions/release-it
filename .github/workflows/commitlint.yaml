name: Run Commitlint on PR

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - 'main'    
  push:
    branches-ignore:
      - 'main'
permissions:
  pull-requests: write

jobs:
  commitlint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm install

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: npx commitlint --last --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: Create PR comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            const hasComment = comments.some(comment => comment.user.login === 'github-actions[bot]' && comment.body.includes('Commitlint result:'));
            
            if (hasComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: comments.find(comment => comment.user.login === 'github-actions[bot]' && comment.body.includes('Commitlint result:')).id,
                body: `Commitlint result: ${process.env.COMMITLINT_RESULT}`
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `Commitlint result: ${process.env.COMMITLINT_RESULT}`
              });
            }
        env:
          COMMITLINT_RESULT: ${{ steps.commitlint.outputs.result || 'Unknown result' }}
