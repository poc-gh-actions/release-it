name: Run Commitlint on PR

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - 'main'    
  # push:
  #   branches-ignore:
  #     - 'main'
permissions:
  pull-requests: write

jobs:
  commitlint:
    runs-on: ubuntu-latest
    outputs:
      RESULT: ${ steps.commitlint.outputs.RESULT }
      COMMITLINT_RESULT: ${ steps.commitlint.outputs.COMMITLINT_RESULT }
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm install

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: npx commitlint --last --verbose

      - name: Validate commits with Commitlint
        id: commitlint
        run: |
          result=$(npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose)
          echo "$result"
          echo "RESULT=$result" >> $GITHUB_OUTPUT
          if echo "$result" | grep -q 'found 0 problems'; then
            echo "COMMITLINT_RESULT=success" >> $GITHUB_OUTPUT
          else
            echo "COMMITLINT_RESULT=failure" >> $GITHUB_OUTPUT
            exit 1
          fi

  create_pr_comment:
    runs-on: ubuntu-latest
    needs: commitlint
    if: always() && github.event_name == 'pull_request'
    steps:
      - name: Create PR comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const result = ${{ needs.commitlint.outputs.RESULT }};
            const commitlintResult = ${{ needs.commitlint.outputs.COMMITLINT_RESULT }};
            const commentBody = commitlintResult === 'success'
              ? '🎉 Commitlint check passed! All commits follow the required standards. 🚀'
              : `❌ Commitlint check failed ❌\n\n📝 Result:\n\n${result}\n\nSome of your commits do not adhere to the required standards. Please review and adjust them to follow the commit message guidelines. 🛠️🔍`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
